{
  "manifest": {
    "name": "snyk",
    "version": "1.996.0",
    "description": "snyk library and cli utility",
    "files": [
      "help/cli-commands",
      "dist",
      "bin",
      "pysrc",
      "config.default.json",
      "SECURITY.md",
      "LICENSE",
      "README.md"
    ],
    "bin": {
      "snyk": "bin/snyk"
    },
    "engines": {
      "node": ">=12"
    },
    "workspaces": [
      "packages/*"
    ],
    "scripts": {
      "clean": "npx rimraf node_modules dist binary-releases test-results *.tgz tsconfig.tsbuildinfo .eslintcache pysrc packages/*/node_modules packages/*/dist packages/*/tsconfig.tsbuildinfo packages/*/*.tgz",
      "format": "prettier --write '**/*.{js,ts,json,yaml,yml,md}' && npm run lint:js -- --fix",
      "format:changes": "./scripts/format/prettier-changes.sh",
      "lint": "npm-run-all --serial --continue-on-error lint:*",
      "lint:js": "eslint --quiet --color --cache '**/*.{js,ts}'",
      "lint:formatting": "prettier --check '**/*.{js,ts,json,yaml,yml,md}'",
      "build": "npm run build:dev",
      "build:dev": "npm run build --workspaces && npm run build-cli:dev",
      "build:prod": "npm run build --workspaces && npm run build-cli:prod",
      "build-cli:dev": "node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.dev.ts",
      "build-cli:prod": "node --max-old-space-size=8192 node_modules/webpack/bin/webpack.js --config webpack.prod.ts",
      "watch": "npm run build-cli:dev -- --watch",
      "test": "npm run test:unit && npm run test:acceptance && npm run test:tap",
      "test:unit": "jest --runInBand --testPathPattern '/test(/jest)?/unit/'",
      "test:acceptance": "jest --runInBand --testPathPattern '/test(/jest)?/acceptance/'",
      "test:tap": "tap -Rspec --timeout=300 --node-arg=-r --node-arg=ts-node/register test/tap/*.test.* ",
      "test:smoke": "./scripts/run-smoke-tests-locally.sh"
    },
    "keywords": [
      "security",
      "vulnerabilities",
      "advisories",
      "audit",
      "snyk",
      "scan",
      "docker",
      "container",
      "scanning"
    ],
    "author": {
      "name": "snyk.io"
    },
    "license": "Apache-2.0",
    "dependencies": {},
    "devDependencies": {},
    "repository": {
      "type": "git",
      "url": "https://github.com/snyk/snyk.git"
    },
    "pkg": {
      "scripts": [
        "dist/**/*.js",
        "bin/snyk"
      ],
      "assets": [
        "config.default.json",
        "dist",
        "help"
      ]
    },
    "publishConfig": {
      "registry": "https://registry.npmjs.org/",
      "access": "public"
    },
    "_registry": "npm",
    "_loc": "/home/frappe-bench/.cache/yarn/v6/npm-snyk-1.996.0-0369ca9e6a3a148751294c1320f59a79d5eb3c88-integrity/node_modules/snyk/package.json",
    "readmeFilename": "README.md",
    "readme": "<p align=\"center\">\n  <img src=\"https://snyk.io/style/asset/logo/snyk-print.svg\" />\n</p>\n\n# Snyk CLI\n\n[Snyk](https://snyk.io) scans and monitors your projects for security vulnerabilities.\n\n![Snyk CLI screenshot](help/snyk-cli-screenshot.png)\n\n# What is [Snyk](https://snyk.io)?\n\n[Snyk](https://snyk.io) is a developer-first cloud-native security tool.\nIt covers multiple areas of application security:\n\n1. [**Snyk Open Source**](https://snyk.io/product/open-source-security-management/): Find and automatically fix open source vulnerabilities\n2. [**Snyk Code**](https://snyk.io/product/snyk-code/): Find and fix vulnerabilities in your application code in real time\n3. [**Snyk Container**](https://snyk.io/product/container-vulnerability-management/): Find and fix vulnerabilities in container images and Kubernetes applications\n4. [**Snyk Infrastructure as Code**](https://snyk.io/product/infrastructure-as-code-security/): Find and fix insecure configurations in Terraform and Kubernetes code\n\n[Learn more about what Snyk can do and sign up for a free account Â»](https://snyk.io)\n\n# What is Snyk CLI?\n\nSnyk CLI brings the functionality of [Snyk](https://snyk.io) into your development workflow. It can be run locally or in your CI/CD pipeline to scan your projects for security issues.\n\n## Supported languages and tools\n\nSnyk supports many languages and tools, including Java, .NET, JavaScript, Python, Golang, PHP, C/C++, Ruby, Scala and more. See our [Language Support documentation](https://support.snyk.io/hc/en-us/articles/360020352437-Language-support-summary).\n\nCLI also supports [Docker scanning](https://support.snyk.io/hc/en-us/articles/360003946897-Snyk-Container-security-overview) and [Terraform, k8s and other Infrastructure as Code files scanning](https://support.snyk.io/hc/en-us/categories/360001342678-Infrastructure-as-code).\n\n---\n\n# Install Snyk CLI\n\nSnyk CLI can be installed through multiple channels.\n\n## Install with npm or Yarn\n\n[Snyk CLI is available as an npm package](https://www.npmjs.com/package/snyk). If you have Node.js installed locally, you can install it by running:\n\n```bash\nnpm install snyk@latest -g\n```\n\nor if you are using Yarn:\n\n```bash\nyarn global add snyk\n```\n\n## More installation methods\n\n<details>\n  <summary>Standalone executables (macOS, Linux, Windows)</summary>\n\n### Standalone executables\n\nUse [GitHub Releases](https://github.com/snyk/snyk/releases) to download a standalone executable of Snyk CLI for your platform.\n\nWe also provide these standalone executables on our official CDN. See [the `release.json` file](https://static.snyk.io/cli/latest/release.json) for the download links:\n\n```text\nhttps://static.snyk.io/cli/latest/release.json\n\n# Or for specific version or platform\nhttps://static.snyk.io/cli/v1.666.0/release.json\nhttps://static.snyk.io/cli/latest/snyk-macos\n```\n\nFor example, to download and run the latest Snyk CLI on macOS, you could run:\n\n```bash\ncurl https://static.snyk.io/cli/latest/snyk-macos -o snyk\nchmod +x ./snyk\nmv ./snyk /usr/local/bin/\n```\n\nYou can also use these direct links to download the executables:\n\n- macOS: https://static.snyk.io/cli/latest/snyk-macos\n- Windows: https://static.snyk.io/cli/latest/snyk-win.exe\n- Linux: https://static.snyk.io/cli/latest/snyk-linux\n- Linux (arm64): https://static.snyk.io/cli/latest/snyk-linux-arm64\n- Alpine: https://static.snyk.io/cli/latest/snyk-alpine\n\nDrawback of this method is, that you will have to manually keep the Snyk CLI up to date.\n\n#### Verifying standalone binaries\n\nYou can verify both shasum of downloaded binaries and their GPG signatures.\n\nDownload location on `static.snyk.io` contains a file called `sha256sums.txt.asc`.\nYou can download it directly `https://static.snyk.io/cli/latest/sha256sums.txt.asc` or for a specific version like `https://static.snyk.io/cli/v1.666.0/sha256sums.txt.asc`.\n\nTo check that a downloaded file matches the checksum, use a `sha256sum` command like so:\n\n```bash\ngrep snyk-macos sha256sums.txt.asc | sha256sum -c -\n```\n\nIf you want to verify Snyk CLI standalone binaries against [Snyk CLI GPG key](help/_about-this-project/snyk-code-signing-public.pgp), you will need to import it first:\n\n```bash\n# 68BFBCCEB7794E6FC06A2044A29C32E91F4B9569 is the key belonging to code-signing@snyk.io\n# Copy of this public key is also in this repository /help/_about-this-project/snyk-code-signing-public.pgp\ngpg --keyserver hkps://keys.openpgp.org --recv-keys 68BFBCCEB7794E6FC06A2044A29C32E91F4B9569\n```\n\nThen verify the file is signed with:\n\n```bash\ngpg --verify sha256sums.txt.asc\n```\n\nCommand output should look like:\n\n```plain\ngpg: Signature made Mon Apr 25 16:55:01 2022 CEST\ngpg:                using RSA key 68BFBCCEB7794E6FC06A2044A29C32E91F4B9569\ngpg: Good signature from \"Snyk Limited <code-signing@snyk.io>\" [unknown]\ngpg: WARNING: This key is not certified with a trusted signature!\ngpg:          There is no indication that the signature belongs to the owner.\nPrimary key fingerprint: 68BF BCCE B779 4E6F C06A  2044 A29C 32E9 1F4B 9569\n```\n\n</details>\n\n<details>\n  <summary>Install with Homebrew (macOS, Linux)</summary>\n\n### Homebrew\n\nInstall Snyk CLI from [Snyk tap](https://github.com/snyk/homebrew-tap) with [Homebrew](https://brew.sh) by running:\n\n```bash\nbrew tap snyk/tap\nbrew install snyk\n```\n\n</details>\n\n<details>\n  <summary>Scoop (Windows)</summary>\n\n### Scoop\n\nInstall Snyk CLI from our [Snyk bucket](https://github.com/snyk/scoop-snyk) with [Scoop](https://scoop.sh) on Windows:\n\n```\nscoop bucket add snyk https://github.com/snyk/scoop-snyk\nscoop install snyk\n```\n\n</details>\n\n<details>\n  <summary>Snyk CLI in a Docker image</summary>\n\n### Snyk CLI in a Docker image\n\nSnyk CLI can also be run from a Docker image. Snyk offers multiple Docker tags under [`snyk/snyk`](https://hub.docker.com/r/snyk/snyk). These images wrap the Snyk CLI and depending on the Tag come with a relevant tooling for different projects. [See the snyk/images on GitHub for more details and examples](https://github.com/snyk/snyk-images).\n\n</details>\n\n## Install as a part of a Snyk CLI integration\n\nSnyk also offers many integrations into developer tooling. These integrations will install and manage the Snyk CLI for you. For example:\n\n- [Snyk Jenkins plugin](https://github.com/jenkinsci/snyk-security-scanner-plugin)\n- [CircleCI Orb](https://github.com/snyk/snyk-orb)\n- [Azure Pipelines Task](https://github.com/snyk/snyk-azure-pipelines-task)\n- [GitHub Actions](https://github.com/snyk/actions)\n- [IntelliJ IDE Plugin](https://github.com/snyk/snyk-intellij-plugin)\n- [VS Code Extension](https://marketplace.visualstudio.com/items?itemName=snyk-security.snyk-vulnerability-scanner)\n- [Eclipse IDE Extension](https://github.com/snyk/snyk-eclipse-plugin)\n- [Maven plugin](https://github.com/snyk/snyk-maven-plugin)\n- And many more. See [the Integrations documentation](https://support.snyk.io/hc/en-us/categories/360000598398-Integrations)\n\n<p align=\"center\">\n  <a href=\"https://support.snyk.io/hc/en-us/categories/360000598398-Integrations\">\n    <img src=\"help/ide.svg\" alt=\"Snyk CLI IDE integration\" width=\"50%\" />\n  </a>\n</p>\n\n---\n\n# Getting started with Snyk CLI\n\nOnce you installed the Snyk CLI, you can verify it's working by running:\n\n```bash\nsnyk --help\n```\n\nSee the [full Snyk CLI help](./help/cli-commands).\n\n## Authenticating Snyk CLI\n\nSnyk CLI depends on [Snyk.io](https://snyk.io) APIs. Connect your Snyk CLI with [Snyk.io](https://snyk.io) by running:\n\n```bash\nsnyk auth\n```\n\n## Setting up language support\n\nDepending on your project's language, you might need to setup your language environment before using Snyk.\n\nSee our [Language Support documentation](https://support.snyk.io/hc/en-us/articles/360020352437-Language-support-summary).\n\n## Scanning your project\n\nIf you are already in a folder with a supported project, start by running:\n\n```bash\nsnyk test\n```\n\nOr scan a Docker image by its tag with [Snyk Container](https://snyk.io/product/container-vulnerability-management/):\n\n```bash\nsnyk container test ubuntu:18.04\n```\n\nOr a k8s file:\n\n```bash\nsnyk iac test /path/to/kubernetes_file.yaml\n```\n\n## Monitoring your project\n\nSnyk can also monitor your project periodically and alert you for new vulnerabilities. The `snyk monitor` is similar to `snyk test` and can be used to create a project on the Snyk website that will be continuously monitored for new vulnerabilities.\n\n<p align=\"center\">\n  <a href=\"https://snyk.io\">\n    <img src=\"help/monitor.svg\" alt=\"Snyk CLI monitor projects\" width=\"70%\" />\n  </a>\n</p>\n\n```\n> snyk monitor\nMonitoring /project (project-name)...\n\nExplore this snapshot at https://app.snyk.io/org/my-org/project/29361c2c-9005-4692-8df4-88f1c040fa7c/history/e1c994b3-de5d-482b-9281-eab4236c851e\n\nNotifications about newly disclosed issues related to these dependencies will be emailed to you.\n```\n\n### Add Snyk to your CI/CD\n\nSnyk is really powerful when you are continuously scanning and monitoring your projects for vulnerabilities.\n\nUse one of [our integrations](#install-as-a-part-of-a-snyk-cli-integration) to stay secure.\n\nYou can authorize Snyk CLI in your CI/CD programatically:\n\n```bash\n# Using a SNYK_TOKEN envvar (preferred)\nSNYK_TOKEN=<SNYK_API_TOKEN> snyk test\n\n# Or using a Snyk auth command\nsnyk auth <SNYK_API_TOKEN>\nsnyk test\n```\n\n## More flags and options to try\n\nHere are some flags that you might find useful:\n\n- `--severity-threshold=low|medium|high|critical`\n\n  Only report vulnerabilities of provided level or higher.\n\n- `--json`\n\n  Prints results in JSON format.\n\n- `--all-projects`\n\n  Auto-detect all projects in working directory\n\n[See all the available commands and options](./help/cli-commands) by running `--help`:\n\n```bash\nsnyk --help\n# or get help for a specific command like\nsnyk iac --help\nsnyk code --help\n```\n\n# Getting support\n\nIf you need support using Snyk CLI, please [contact support](https://support.snyk.io).\n\nWe do not actively monitor GitHub Issues so any issues there may go unnoticed.\n\n# Contributing\n\nIf you are an external contributor, before working on any contributions, please first [contact support](https://support.snyk.io) to discuss the issue or feature request with us.\n\nIf you are contributing to Snyk CLI, see [our contributing guidelines](CONTRIBUTING.md)\n\nFor information on how Snyk CLI is implemented, see [our design decisions](help/_about-this-project/README.md).\n\nThis repository is a monorepo, also covering other projects and tools:\n\n- [`@snyk/fix`](packages/snyk-fix): npm package for `snyk fix` libraries.\n- [`@snyk/protect`](packages/snyk-protect): npm package for [`snyk-protect`](https://www.npmjs.com/package/@snyk/protect) command.\n\n# Security\n\nFor any security issues or concerns, please see [SECURITY.md](SECURITY.md) file in this repository.\n\n# Notices\n\n## Snyk API usage policy\n\nThe use of Snyk's API, whether through the use of the 'snyk' npm package or otherwise, is subject to the [Terms & Conditions](https://snyk.co/ucT6N).\n\n---\n\nMade with ð by Snyk\n",
    "licenseText": "Copyright 2015 Snyk Ltd.\n\nLicensed under the Apache License, Version 2.0 (the \"License\");\nyou may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n\n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software\ndistributed under the License is distributed on an \"AS IS\" BASIS,\nWITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and\nlimitations under the License.\n"
  },
  "artifacts": [],
  "remote": {
    "resolved": "https://registry.yarnpkg.com/snyk/-/snyk-1.996.0.tgz#0369ca9e6a3a148751294c1320f59a79d5eb3c88",
    "type": "tarball",
    "reference": "https://registry.yarnpkg.com/snyk/-/snyk-1.996.0.tgz",
    "hash": "0369ca9e6a3a148751294c1320f59a79d5eb3c88",
    "integrity": "sha512-nq//Ely0bSt50LzX9Er5lCQNqTpaKn7I7xkhUB3Z+8rs8Jqha360HeQwhbVzsuQS3xT/1+36zt6CcgyLPM1QbA==",
    "registry": "npm",
    "packageName": "snyk",
    "cacheIntegrity": "sha512-nq//Ely0bSt50LzX9Er5lCQNqTpaKn7I7xkhUB3Z+8rs8Jqha360HeQwhbVzsuQS3xT/1+36zt6CcgyLPM1QbA== sha1-A2nKnmo6FIdRKUwTIPWaedXrPIg="
  },
  "registry": "npm",
  "hash": "0369ca9e6a3a148751294c1320f59a79d5eb3c88"
}